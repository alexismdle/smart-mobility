{
  "nodes": [
    { "id": "Agency", "label": "Agency", "type": "class", "source_file": "agency.txt" },
    { "id": "Stop", "label": "Stop", "type": "class", "source_file": "stops.txt" },
    { "id": "Route", "label": "Route", "type": "class", "source_file": "routes.txt" },
    { "id": "Trip", "label": "Trip", "type": "class", "source_file": "trips.txt" },
    { "id": "StopTime", "label": "StopTime", "type": "class", "source_file": "stop_times.txt" },
    { "id": "agency_id", "label": "agency_id", "type": "datatypeProperty", "value_type": "string", "required": "conditional", "description": "Identifie une marque de transport en commun..." },
    { "id": "agency_name", "label": "agency_name", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Nom complet de l’agence de transport." },
    { "id": "agency_url", "label": "agency_url", "type": "datatypeProperty", "value_type": "url", "required": true, "description": "URL de l’agence." },
    { "id": "agency_timezone", "label": "agency_timezone", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Fuseau horaire de l’agence." },
    { "id": "agency_lang", "label": "agency_lang", "type": "datatypeProperty", "value_type": "lang", "required": false, "description": "Langue principale utilisée." },
    { "id": "agency_phone", "label": "agency_phone", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Numéro de téléphone vocal." },
    { "id": "agency_fare_url", "label": "agency_fare_url", "type": "datatypeProperty", "value_type": "url", "required": false, "description": "URL d’achat ou d’infos sur les tarifs." },
    { "id": "agency_email", "label": "agency_email", "type": "datatypeProperty", "value_type": "email", "required": false, "description": "Email du service client." },
    { "id": "stop_id", "label": "stop_id", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Identifie un emplacement (arrêt, quai, station, etc.). Doit être unique.", "gtfs_type": "ID" },
    { "id": "stop_code", "label": "stop_code", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Code court ou numéro pour les passagers.", "gtfs_type": "Text" },
    { "id": "stop_name", "label": "stop_name", "type": "datatypeProperty", "value_type": "string", "required": "conditional", "description": "Nom affiché de l’emplacement tel qu’indiqué aux usagers.", "gtfs_type": "Text" },
    { "id": "tts_stop_name", "label": "tts_stop_name", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Version lisible par synthèse vocale de stop_name.", "gtfs_type": "Text" },
    { "id": "stop_desc", "label": "stop_desc", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Description utile de l’emplacement, différente de stop_name.", "gtfs_type": "Text" },
    { "id": "stop_lat", "label": "stop_lat", "type": "datatypeProperty", "value_type": "latitude", "required": "conditional", "description": "Latitude de l’emplacement (poteau, quai, etc.).", "gtfs_type": "Latitude" },
    { "id": "stop_lon", "label": "stop_lon", "type": "datatypeProperty", "value_type": "longitude", "required": "conditional", "description": "Longitude de l’emplacement (poteau, quai, etc.).", "gtfs_type": "Longitude" },
    { "id": "zone_id", "label": "zone_id", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Identifie la zone tarifaire de l’arrêt.", "gtfs_type": "ID" },
    { "id": "stop_url", "label": "stop_url", "type": "datatypeProperty", "value_type": "url", "required": false, "description": "URL vers une page sur cet emplacement.", "gtfs_type": "URL" },
    { "id": "location_type", "label": "location_type", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Type d’emplacement (arrêt, station, entrée, etc.).", "gtfs_type": "Enum", "enum_values": [0, 1, 2, 3, 4] },
    { "id": "parent_station", "label": "parent_station", "type": "objectProperty", "target_class": "Stop", "required": "conditional", "description": "Référence à l’arrêt parent (hiérarchie d’emplacements).", "gtfs_type": "Foreign ID" },
    { "id": "stop_timezone", "label": "stop_timezone", "type": "datatypeProperty", "value_type": "timezone", "required": false, "description": "Fuseau horaire propre à cet arrêt. Hérite de la station ou de l’agence si absent.", "gtfs_type": "Timezone" },
    { "id": "wheelchair_boarding", "label": "wheelchair_boarding", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Accessibilité de l’embarquement fauteuil roulant.", "gtfs_type": "Enum", "enum_values": [0, 1, 2] },
    { "id": "level_id", "label": "level_id", "type": "objectProperty", "target_class": "Level", "required": false, "description": "Référence à un niveau (étage, etc.) dans levels.txt.", "gtfs_type": "Foreign ID" },
    { "id": "platform_code", "label": "platform_code", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Identifiant court du quai (ex: 'G' ou '3').", "gtfs_type": "Text" },
    { "id": "route_id", "label": "route_id", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Identifiant unique de la ligne de transport.", "gtfs_type": "ID" },
    { "id": "agency_id", "label": "agency_id", "type": "objectProperty", "target_class": "Agency", "required": "conditional", "description": "Référence à l’agence qui gère la ligne (requis si plusieurs agences).", "gtfs_type": "Foreign ID" },
    { "id": "route_short_name", "label": "route_short_name", "type": "datatypeProperty", "value_type": "string", "required": "conditional", "description": "Nom court de la ligne (ex: 32, A).", "gtfs_type": "Text" },
    { "id": "route_long_name", "label": "route_long_name", "type": "datatypeProperty", "value_type": "string", "required": "conditional", "description": "Nom long de la ligne (ex: Centre-ville - Aéroport).", "gtfs_type": "Text" },
    { "id": "route_desc", "label": "route_desc", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Description facultative de la ligne.", "gtfs_type": "Text" },
    { "id": "route_type", "label": "route_type", "type": "datatypeProperty", "value_type": "enum", "required": true, "description": "Type de transport (bus, tram, métro, etc.).", "gtfs_type": "Enum", "enum_values": [0, 1, 2, 3, 4, 5, 6, 7] },
    { "id": "route_url", "label": "route_url", "type": "datatypeProperty", "value_type": "url", "required": false, "description": "Lien vers une page web décrivant cette ligne.", "gtfs_type": "URL" },
    { "id": "route_color", "label": "route_color", "type": "datatypeProperty", "value_type": "color", "required": false, "description": "Couleur de la ligne (hex sans #).", "gtfs_type": "Color" },
    { "id": "route_text_color", "label": "route_text_color", "type": "datatypeProperty", "value_type": "color", "required": false, "description": "Couleur du texte pour cette ligne (hex sans #).", "gtfs_type": "Color" },
    { "id": "route_sort_order", "label": "route_sort_order", "type": "datatypeProperty", "value_type": "integer", "required": false, "description": "Ordre de tri optionnel d’affichage des lignes.", "gtfs_type": "Integer" },
    { "id": "continuous_pickup", "label": "continuous_pickup", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Indique si un embarquement continu est possible.", "gtfs_type": "Enum", "enum_values": [0, 1, 2, 3] },
    { "id": "continuous_drop_off", "label": "continuous_drop_off", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Indique si un débarquement continu est possible.", "gtfs_type": "Enum", "enum_values": [0, 1, 2, 3] },
    { "id": "route_id", "label": "route_id", "type": "objectProperty", "target_class": "Route", "required": true, "description": "Identifie la ligne à laquelle appartient ce voyage.", "gtfs_type": "Foreign ID" },
    { "id": "service_id", "label": "service_id", "type": "objectProperty", "target_class": "Service", "required": true, "description": "Fait référence à un ID dans calendar.txt ou calendar_dates.txt, définissant les jours de service.", "gtfs_type": "Foreign ID" },
    { "id": "trip_id", "label": "trip_id", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Identifiant unique du voyage (course) dans le fichier.", "gtfs_type": "ID" },
    { "id": "trip_headsign", "label": "trip_headsign", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Affiché en direction du véhicule, destination visible par les usagers.", "gtfs_type": "Text" },
    { "id": "trip_short_name", "label": "trip_short_name", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Nom court du voyage, souvent un numéro ou identifiant court du service.", "gtfs_type": "Text" },
    { "id": "direction_id", "label": "direction_id", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Direction du voyage : 0 ou 1.", "gtfs_type": "Enum", "enum_values": [0, 1] },
    { "id": "block_id", "label": "block_id", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Identifie un groupe de voyages exécutés par le même véhicule.", "gtfs_type": "ID" },
    { "id": "shape_id", "label": "shape_id", "type": "objectProperty", "target_class": "Shape", "required": false, "description": "Fait référence à la géométrie du parcours dans shapes.txt.", "gtfs_type": "Foreign ID" },
    { "id": "wheelchair_accessible", "label": "wheelchair_accessible", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Indique si le voyage est accessible aux fauteuils roulants.", "gtfs_type": "Enum", "enum_values": [0, 1, 2] },
    { "id": "bikes_allowed", "label": "bikes_allowed", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Indique si les vélos sont autorisés à bord du véhicule.", "gtfs_type": "Enum", "enum_values": [0, 1, 2] },
    { "id": "trip_id", "label": "trip_id", "type": "objectProperty", "target_class": "Trip", "required": true, "description": "Référence au voyage (trip) auquel appartient cet arrêt.", "gtfs_type": "Foreign ID" },
    { "id": "arrival_time", "label": "arrival_time", "type": "datatypeProperty", "value_type": "time", "required": false, "description": "Heure d’arrivée à l’arrêt, au format HH:MM:SS (peut dépasser 24h pour les trajets de nuit).", "gtfs_type": "Time" },
    { "id": "departure_time", "label": "departure_time", "type": "datatypeProperty", "value_type": "time", "required": false, "description": "Heure de départ de l’arrêt, au format HH:MM:SS.", "gtfs_type": "Time" },
    { "id": "stop_id", "label": "stop_id", "type": "objectProperty", "target_class": "Stop", "required": true, "description": "Référence à un arrêt défini dans stops.txt.", "gtfs_type": "Foreign ID" },
    { "id": "stop_sequence", "label": "stop_sequence", "type": "datatypeProperty", "value_type": "integer", "required": true, "description": "Ordre séquentiel de l’arrêt dans le voyage.", "gtfs_type": "Integer" },
    { "id": "stop_headsign", "label": "stop_headsign", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Destination affichée à cet arrêt (remplace trip_headsign si précisé).", "gtfs_type": "Text" },
    { "id": "pickup_type", "label": "pickup_type", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Décrit si les passagers peuvent monter à bord à cet arrêt.", "gtfs_type": "Enum", "enum_values": [0, 1, 2, 3] },
    { "id": "drop_off_type", "label": "drop_off_type", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Décrit si les passagers peuvent descendre à cet arrêt.", "gtfs_type": "Enum", "enum_values": [0, 1, 2, 3] },
    { "id": "continuous_pickup", "label": "continuous_pickup", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Possibilité de montée continue (flag stop) sur ce segment.", "gtfs_type": "Enum", "enum_values": [0, 1, 2, 3] },
    { "id": "continuous_drop_off", "label": "continuous_drop_off", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Possibilité de descente continue (flag stop) sur ce segment.", "gtfs_type": "Enum", "enum_values": [0, 1, 2, 3] },
    { "id": "shape_dist_traveled", "label": "shape_dist_traveled", "type": "datatypeProperty", "value_type": "float", "required": false, "description": "Distance (en mètres) parcourue depuis le début du voyage le long du tracé.", "gtfs_type": "Distance" },
    { "id": "timepoint", "label": "timepoint", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Indique si l’heure d’arrêt est précise (1) ou approximative (0).", "gtfs_type": "Enum", "enum_values": [0, 1] },
    { "id": "Service", "label": "Service", "type": "class", "source_file": "calendar.txt" },
    { "id": "service_id", "label": "service_id", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Identifiant unique du service (calendrier d’exploitation).", "gtfs_type": "ID" },
    { "id": "monday", "label": "monday", "type": "datatypeProperty", "value_type": "boolean", "required": true, "description": "Service actif le lundi ? 1 = oui, 0 = non", "gtfs_type": "Boolean" },
    { "id": "tuesday", "label": "tuesday", "type": "datatypeProperty", "value_type": "boolean", "required": true, "description": "Service actif le mardi ?", "gtfs_type": "Boolean" },
    { "id": "wednesday", "label": "wednesday", "type": "datatypeProperty", "value_type": "boolean", "required": true },
    { "id": "thursday", "label": "thursday", "type": "datatypeProperty", "value_type": "boolean", "required": true },
    { "id": "friday", "label": "friday", "type": "datatypeProperty", "value_type": "boolean", "required": true },
    { "id": "saturday", "label": "saturday", "type": "datatypeProperty", "value_type": "boolean", "required": true },
    { "id": "sunday", "label": "sunday", "type": "datatypeProperty", "value_type": "boolean", "required": true },
    { "id": "start_date", "label": "start_date", "type": "datatypeProperty", "value_type": "date", "required": true, "description": "Date de début de validité du service.", "gtfs_type": "Date" },
    { "id": "end_date", "label": "end_date", "type": "datatypeProperty", "value_type": "date", "required": true, "description": "Date de fin de validité du service.", "gtfs_type": "Date" },
    { "id": "ShapePoint", "label": "ShapePoint", "type": "class", "source_file": "shapes.txt" },
    { "id": "shape_id", "label": "shape_id", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Identifiant du tracé (shape).", "gtfs_type": "ID" },
    { "id": "shape_pt_lat", "label": "shape_pt_lat", "type": "datatypeProperty", "value_type": "latitude", "required": true, "description": "Latitude du point du tracé.", "gtfs_type": "Latitude" },
    { "id": "shape_pt_lon", "label": "shape_pt_lon", "type": "datatypeProperty", "value_type": "longitude", "required": true, "description": "Longitude du point du tracé.", "gtfs_type": "Longitude" },
    { "id": "shape_pt_sequence", "label": "shape_pt_sequence", "type": "datatypeProperty", "value_type": "integer", "required": true, "description": "Position séquentielle du point dans le tracé.", "gtfs_type": "Integer" },
    { "id": "shape_dist_traveled", "label": "shape_dist_traveled", "type": "datatypeProperty", "value_type": "float", "required": false, "description": "Distance cumulée depuis le début du tracé (mètres).", "gtfs_type": "Distance" },
    { "id": "CalendarDate", "label": "CalendarDate", "type": "class", "source_file": "calendar_dates.txt" },
    { "id": "service_id", "label": "service_id", "type": "objectProperty", "target_class": "Service", "required": true, "description": "Identifiant d’un service du calendrier (référence à calendar.txt).", "gtfs_type": "Foreign ID" },
    { "id": "date", "label": "date", "type": "datatypeProperty", "value_type": "date", "required": true, "description": "Date d’ajout ou de suppression du service.", "gtfs_type": "Date" },
    { "id": "exception_type", "label": "exception_type", "type": "datatypeProperty", "value_type": "enum", "required": true, "description": "Type d’exception : 1 = service ajouté, 2 = service supprimé.", "gtfs_type": "Enum", "enum_values": [1, 2] },
    { "id": "Frequency", "label": "Frequency", "type": "class", "source_file": "frequencies.txt" },
    { "id": "trip_id", "label": "trip_id", "type": "objectProperty", "target_class": "Trip", "required": true, "description": "Identifiant du trajet (référence à trips.txt)." },
    { "id": "start_time", "label": "start_time", "type": "datatypeProperty", "value_type": "time", "required": true, "description": "Heure de début de fréquence." },
    { "id": "end_time", "label": "end_time", "type": "datatypeProperty", "value_type": "time", "required": true, "description": "Heure de fin de fréquence." },
    { "id": "headway_secs", "label": "headway_secs", "type": "datatypeProperty", "value_type": "integer", "required": true, "description": "Temps (en secondes) entre les départs de véhicules." },
    { "id": "exact_times", "label": "exact_times", "type": "datatypeProperty", "value_type": "enum", "required": false, "description": "Indique si les horaires sont exacts (1) ou non (0).", "enum_values": [0, 1] },
    { "id": "Pathway", "label": "Pathway", "type": "class", "source_file": "pathways.txt" },
    { "id": "pathway_id", "label": "pathway_id", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Identifiant unique du chemin." },
    { "id": "from_stop_id", "label": "from_stop_id", "type": "objectProperty", "target_class": "Stop", "required": true, "description": "ID de l’emplacement d’origine." },
    { "id": "to_stop_id", "label": "to_stop_id", "type": "objectProperty", "target_class": "Stop", "required": true, "description": "ID de l’emplacement de destination." },
    { "id": "pathway_mode", "label": "pathway_mode", "type": "datatypeProperty", "value_type": "enum", "required": true, "description": "Mode de déplacement : escalier, ascenseur, etc.", "enum_values": [1, 2, 3, 4, 5, 6, 7] },
    { "id": "is_bidirectional", "label": "is_bidirectional", "type": "datatypeProperty", "value_type": "boolean", "required": true, "description": "Le chemin est-il bidirectionnel ?" },
    { "id": "length", "label": "length", "type": "datatypeProperty", "value_type": "float", "required": false },
    { "id": "traversal_time", "label": "traversal_time", "type": "datatypeProperty", "value_type": "integer", "required": false },
    { "id": "stair_count", "label": "stair_count", "type": "datatypeProperty", "value_type": "integer", "required": false },
    { "id": "max_slope", "label": "max_slope", "type": "datatypeProperty", "value_type": "float", "required": false },
    { "id": "min_width", "label": "min_width", "type": "datatypeProperty", "value_type": "float", "required": false },
    { "id": "signposted_as", "label": "signposted_as", "type": "datatypeProperty", "value_type": "string", "required": false },
    { "id": "reversed_signposted_as", "label": "reversed_signposted_as", "type": "datatypeProperty", "value_type": "string", "required": false },
    { "id": "Translation", "label": "Translation", "type": "class", "source_file": "translations.txt" },
    { "id": "table_name", "label": "table_name", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Nom du fichier contenant le champ à traduire." },
    { "id": "field_name", "label": "field_name", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Nom du champ à traduire." },
    { "id": "language", "label": "language", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Code de langue selon la norme BCP 47." },
    { "id": "translation", "label": "translation", "type": "datatypeProperty", "value_type": "string", "required": true, "description": "Texte traduit." },
    { "id": "record_id", "label": "record_id", "type": "datatypeProperty", "value_type": "string", "required": false, "description": "Clé primaire de la ligne concernée." },
    { "id": "record_sub_id", "label": "record_sub_id", "type": "datatypeProperty", "value_type": "string", "required": false },
    { "id": "field_value", "label": "field_value", "type": "datatypeProperty", "value_type": "string", "required": false }
  ],
  "edges": [
    { "from": "Agency", "to": "agency_id", "label": "hasProperty" },
    { "from": "Agency", "to": "agency_name", "label": "hasProperty" },
    { "from": "Agency", "to": "agency_url", "label": "hasProperty" },
    { "from": "Agency", "to": "agency_timezone", "label": "hasProperty" },
    { "from": "Agency", "to": "agency_lang", "label": "hasProperty" },
    { "from": "Agency", "to": "agency_phone", "label": "hasProperty" },
    { "from": "Agency", "to": "agency_fare_url", "label": "hasProperty" },
    { "from": "Agency", "to": "agency_email", "label": "hasProperty" },
    { "from": "Stop", "to": "stop_id", "label": "hasProperty" },
    { "from": "Stop", "to": "stop_code", "label": "hasProperty" },
    { "from": "Stop", "to": "stop_name", "label": "hasProperty" },
    { "from": "Stop", "to": "tts_stop_name", "label": "hasProperty" },
    { "from": "Stop", "to": "stop_desc", "label": "hasProperty" },
    { "from": "Stop", "to": "stop_lat", "label": "hasProperty" },
    { "from": "Stop", "to": "stop_lon", "label": "hasProperty" },
    { "from": "Stop", "to": "zone_id", "label": "hasProperty" },
    { "from": "Stop", "to": "stop_url", "label": "hasProperty" },
    { "from": "Stop", "to": "location_type", "label": "hasProperty" },
    { "from": "Stop", "to": "parent_station", "label": "hasProperty" },
    { "from": "Stop", "to": "stop_timezone", "label": "hasProperty" },
    { "from": "Stop", "to": "wheelchair_boarding", "label": "hasProperty" },
    { "from": "Stop", "to": "level_id", "label": "hasProperty" },
    { "from": "Stop", "to": "platform_code", "label": "hasProperty" },
    { "from": "Route", "to": "route_id", "label": "hasProperty" },
    { "from": "Route", "to": "agency_id", "label": "hasProperty" },
    { "from": "Route", "to": "route_short_name", "label": "hasProperty" },
    { "from": "Route", "to": "route_long_name", "label": "hasProperty" },
    { "from": "Route", "to": "route_desc", "label": "hasProperty" },
    { "from": "Route", "to": "route_type", "label": "hasProperty" },
    { "from": "Route", "to": "route_url", "label": "hasProperty" },
    { "from": "Route", "to": "route_color", "label": "hasProperty" },
    { "from": "Route", "to": "route_text_color", "label": "hasProperty" },
    { "from": "Route", "to": "route_sort_order", "label": "hasProperty" },
    { "from": "Route", "to": "continuous_pickup", "label": "hasProperty" },
    { "from": "Route", "to": "continuous_drop_off", "label": "hasProperty" },
    { "from": "Trip", "to": "route_id", "label": "hasProperty" },
    { "from": "Trip", "to": "service_id", "label": "hasProperty" },
    { "from": "Trip", "to": "trip_id", "label": "hasProperty" },
    { "from": "Trip", "to": "trip_headsign", "label": "hasProperty" },
    { "from": "Trip", "to": "trip_short_name", "label": "hasProperty" },
    { "from": "Trip", "to": "direction_id", "label": "hasProperty" },
    { "from": "Trip", "to": "block_id", "label": "hasProperty" },
    { "from": "Trip", "to": "shape_id", "label": "hasProperty" },
    { "from": "Trip", "to": "wheelchair_accessible", "label": "hasProperty" },
    { "from": "Trip", "to": "bikes_allowed", "label": "hasProperty" },
    { "from": "StopTime", "to": "trip_id", "label": "hasProperty" },
    { "from": "StopTime", "to": "arrival_time", "label": "hasProperty" },
    { "from": "StopTime", "to": "departure_time", "label": "hasProperty" },
    { "from": "StopTime", "to": "stop_id", "label": "hasProperty" },
    { "from": "StopTime", "to": "stop_sequence", "label": "hasProperty" },
    { "from": "StopTime", "to": "stop_headsign", "label": "hasProperty" },
    { "from": "StopTime", "to": "pickup_type", "label": "hasProperty" },
    { "from": "StopTime", "to": "drop_off_type", "label": "hasProperty" },
    { "from": "StopTime", "to": "continuous_pickup", "label": "hasProperty" },
    { "from": "StopTime", "to": "continuous_drop_off", "label": "hasProperty" },
    { "from": "StopTime", "to": "shape_dist_traveled", "label": "hasProperty" },
    { "from": "StopTime", "to": "timepoint", "label": "hasProperty" },
    { "from": "Service", "to": "service_id", "label": "hasProperty" },
    { "from": "Service", "to": "monday", "label": "hasProperty" },
    { "from": "Service", "to": "tuesday", "label": "hasProperty" },
    { "from": "Service", "to": "wednesday", "label": "hasProperty" },
    { "from": "Service", "to": "thursday", "label": "hasProperty" },
    { "from": "Service", "to": "friday", "label": "hasProperty" },
    { "from": "Service", "to": "saturday", "label": "hasProperty" },
    { "from": "Service", "to": "sunday", "label": "hasProperty" },
    { "from": "Service", "to": "start_date", "label": "hasProperty" },
    { "from": "Service", "to": "end_date", "label": "hasProperty" },
    { "from": "CalendarDate", "to": "service_id", "label": "refersTo" },
    { "from": "CalendarDate", "to": "date", "label": "hasProperty" },
    { "from": "CalendarDate", "to": "exception_type", "label": "hasProperty" },
    { "from": "ShapePoint", "to": "shape_id", "label": "belongsTo" },
    { "from": "ShapePoint", "to": "shape_pt_lat", "label": "hasProperty" },
    { "from": "ShapePoint", "to": "shape_pt_lon", "label": "hasProperty" },
    { "from": "ShapePoint", "to": "shape_pt_sequence", "label": "hasProperty" },
    { "from": "ShapePoint", "to": "shape_dist_traveled", "label": "hasProperty" },
    { "from": "Frequency", "to": "trip_id", "label": "refersTo" },
    { "from": "Frequency", "to": "start_time", "label": "hasProperty" },
    { "from": "Frequency", "to": "end_time", "label": "hasProperty" },
    { "from": "Frequency", "to": "headway_secs", "label": "hasProperty" },
    { "from": "Frequency", "to": "exact_times", "label": "hasProperty" },
    { "from": "Pathway", "to": "pathway_id", "label": "hasProperty" },
    { "from": "Pathway", "to": "from_stop_id", "label": "startsAt" },
    { "from": "Pathway", "to": "to_stop_id", "label": "endsAt" },
    { "from": "Pathway", "to": "pathway_mode", "label": "hasProperty" },
    { "from": "Pathway", "to": "is_bidirectional", "label": "hasProperty" },
    { "from": "Pathway", "to": "length", "label": "hasProperty" },
    { "from": "Pathway", "to": "traversal_time", "label": "hasProperty" },
    { "from": "Pathway", "to": "stair_count", "label": "hasProperty" },
    { "from": "Pathway", "to": "max_slope", "label": "hasProperty" },
    { "from": "Pathway", "to": "min_width", "label": "hasProperty" },
    { "from": "Pathway", "to": "signposted_as", "label": "hasProperty" },
    { "from": "Pathway", "to": "reversed_signposted_as", "label": "hasProperty" },
    { "from": "Translation", "to": "table_name", "label": "hasProperty" },
    { "from": "Translation", "to": "field_name", "label": "hasProperty" },
    { "from": "Translation", "to": "language", "label": "hasProperty" },
    { "from": "Translation", "to": "translation", "label": "hasProperty" },
    { "from": "Translation", "to": "record_id", "label": "targetsRecord" },
    { "from": "Translation", "to": "record_sub_id", "label": "targetsSubRecord" },
    { "from": "Translation", "to": "field_value", "label": "targetsFieldValue" }
  ]
}
